#*****************************************************************************************
# Vivado (TM) v2020.2 (64-bit)
#
# create_project.tcl: Tcl script for re-creating project 'vivado'
#
# Generated by Vivado on Sat Aug 27 10:41:21 -0700 2022
# IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (create_project.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/dsp/dsp_dds_compiler_controller.vhd"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/registers/axi_slave_register.vhd"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/basic_counter.vhd"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/dsp/dsp_data_source_mux.vhd"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/valid_data_holder.vhd"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/zero_padder.vhd"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/resizer.vhd"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/complex_splitter.vhd"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/subarray_creator.vhd"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/filters/bandpass.coe"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/filters/lowpass.coe"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/remake_defn_pkg.sv"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_vip/stream_agent.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_vip/stream_seq_item.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_vip/stream_abstract_class.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_vip/stream_driver.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_vip/stream_agent_config.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_vip/stream_monitor.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_vip/stream_sequencer.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_vip/stream_seq.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_vip/stream_agent_pkg.sv"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR1_vip/stream_ADDR1_agent.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR1_vip/stream_ADDR1_seq_item.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR1_vip/stream_ADDR1_abstract_class.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR1_vip/stream_ADDR1_driver.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR1_vip/stream_ADDR1_agent_config.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR1_vip/stream_ADDR1_monitor.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR1_vip/stream_ADDR1_sequencer.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR1_vip/stream_ADDR1_agent_pkg.sv"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR2_vip/stream_ADDR2_agent.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR2_vip/stream_ADDR2_seq_item.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR2_vip/stream_ADDR2_abstract_class.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR2_vip/stream_ADDR2_driver.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR2_vip/stream_ADDR2_agent_config.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR2_vip/stream_ADDR2_monitor.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR2_vip/stream_ADDR2_sequencer.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR2_vip/stream_ADDR2_agent_pkg.sv"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_slave_vip/stream_slave_agent.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_slave_vip/stream_slave_seq_item.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_slave_vip/stream_slave_abstract_class.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_slave_vip/stream_slave_driver.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_slave_vip/stream_slave_agent_config.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_slave_vip/stream_slave_monitor.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_slave_vip/stream_slave_sequencer.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_slave_vip/stream_slave_seq.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_slave_vip/stream_slave_agent_pkg.sv"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/remake_env_pkg.sv"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/remake_vseq_pkg.sv"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/remake_test_pkg.sv"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR1_vip/stream_ADDR1_if.sv"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR2_vip/stream_ADDR2_if.sv"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_vip/stream_if.sv"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_slave_vip/stream_slave_if.sv"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/remake_top.sv"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_vip/stream_agent.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_vip/stream_seq_item.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_vip/stream_abstract_class.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_vip/stream_driver.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_vip/stream_agent_config.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_vip/stream_monitor.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_vip/stream_sequencer.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_vip/stream_seq.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_vip/stream_agent_pkg.sv"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_agent.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_seq_item.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_abstract_class.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_driver.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_agent_config.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_monitor.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_sequencer.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_agent_pkg.sv"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_agent.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_seq_item.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_abstract_class.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_driver.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_agent_config.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_monitor.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_sequencer.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_agent_pkg.sv"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_slave_vip/stream_slave_agent.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_slave_vip/stream_slave_seq_item.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_slave_vip/stream_slave_abstract_class.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_slave_vip/stream_slave_driver.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_slave_vip/stream_slave_agent_config.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_slave_vip/stream_slave_monitor.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_slave_vip/stream_slave_sequencer.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_slave_vip/stream_slave_seq.svh"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_slave_vip/stream_slave_agent_pkg.sv"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_if.sv"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_if.sv"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_vip/stream_if.sv"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_slave_vip/stream_slave_if.sv"
#    "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/wave/vivado_sim.wcfg"
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/dsp/dsp_dds_compiler_controller.vhd" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/registers/axi_slave_register.vhd" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/basic_counter.vhd" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/dsp/dsp_data_source_mux.vhd" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/valid_data_holder.vhd" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/zero_padder.vhd" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/resizer.vhd" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/complex_splitter.vhd" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/subarray_creator.vhd" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/filters/bandpass.coe" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/filters/lowpass.coe" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/remake_defn_pkg.sv" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_vip/stream_agent.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_vip/stream_seq_item.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_vip/stream_abstract_class.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_vip/stream_driver.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_vip/stream_agent_config.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_vip/stream_monitor.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_vip/stream_sequencer.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_vip/stream_seq.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_vip/stream_agent_pkg.sv" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR1_vip/stream_ADDR1_agent.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR1_vip/stream_ADDR1_seq_item.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR1_vip/stream_ADDR1_abstract_class.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR1_vip/stream_ADDR1_driver.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR1_vip/stream_ADDR1_agent_config.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR1_vip/stream_ADDR1_monitor.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR1_vip/stream_ADDR1_sequencer.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR1_vip/stream_ADDR1_agent_pkg.sv" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR2_vip/stream_ADDR2_agent.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR2_vip/stream_ADDR2_seq_item.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR2_vip/stream_ADDR2_abstract_class.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR2_vip/stream_ADDR2_driver.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR2_vip/stream_ADDR2_agent_config.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR2_vip/stream_ADDR2_monitor.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR2_vip/stream_ADDR2_sequencer.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR2_vip/stream_ADDR2_agent_pkg.sv" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_slave_vip/stream_slave_agent.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_slave_vip/stream_slave_seq_item.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_slave_vip/stream_slave_abstract_class.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_slave_vip/stream_slave_driver.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_slave_vip/stream_slave_agent_config.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_slave_vip/stream_slave_monitor.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_slave_vip/stream_slave_sequencer.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_slave_vip/stream_slave_seq.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_slave_vip/stream_slave_agent_pkg.sv" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/remake_env_pkg.sv" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/remake_vseq_pkg.sv" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/remake_test_pkg.sv" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR1_vip/stream_ADDR1_if.sv" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_ADDR2_vip/stream_ADDR2_if.sv" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_vip/stream_if.sv" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/vip/stream_slave_vip/stream_slave_if.sv" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/remake_top.sv" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_vip/stream_agent.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_vip/stream_seq_item.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_vip/stream_abstract_class.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_vip/stream_driver.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_vip/stream_agent_config.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_vip/stream_monitor.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_vip/stream_sequencer.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_vip/stream_seq.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_vip/stream_agent_pkg.sv" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_agent.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_seq_item.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_abstract_class.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_driver.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_agent_config.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_monitor.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_sequencer.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_agent_pkg.sv" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_agent.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_seq_item.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_abstract_class.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_driver.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_agent_config.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_monitor.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_sequencer.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_agent_pkg.sv" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_slave_vip/stream_slave_agent.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_slave_vip/stream_slave_seq_item.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_slave_vip/stream_slave_abstract_class.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_slave_vip/stream_slave_driver.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_slave_vip/stream_slave_agent_config.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_slave_vip/stream_slave_monitor.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_slave_vip/stream_slave_sequencer.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_slave_vip/stream_slave_seq.svh" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_slave_vip/stream_slave_agent_pkg.sv" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_if.sv" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_if.sv" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_vip/stream_if.sv" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/sim/remake/vip/stream_slave_vip/stream_slave_if.sv" \
   "C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/wave/vivado_sim.wcfg" \
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find remote file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "vivado"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "create_project.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/vivado"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} "vivado" -part xc7z030fbg676-2

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part" -value "www.proyecto-ciaa.com.ar:ciaa-acc:part0:1.0" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "platform.board_id" -value "ciaa-acc" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "target_language" -value "VHDL" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "17" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "17" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "17" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "29" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "17" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "17" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "17" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "31" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/src/dsp/dsp_dds_compiler_controller.vhd"] \
 [file normalize "${origin_dir}/src/registers/axi_slave_register.vhd"] \
 [file normalize "${origin_dir}/src/helpers/basic_counter.vhd"] \
 [file normalize "${origin_dir}/src/dsp/dsp_data_source_mux.vhd"] \
 [file normalize "${origin_dir}/src/helpers/valid_data_holder.vhd"] \
 [file normalize "${origin_dir}/src/helpers/zero_padder.vhd"] \
 [file normalize "${origin_dir}/src/helpers/resizer.vhd"] \
 [file normalize "${origin_dir}/src/helpers/complex_splitter.vhd"] \
 [file normalize "${origin_dir}/src/helpers/subarray_creator.vhd"] \
 [file normalize "${origin_dir}/filters/bandpass.coe"] \
 [file normalize "${origin_dir}/filters/lowpass.coe"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/src/dsp/dsp_dds_compiler_controller.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/src/registers/axi_slave_register.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/src/helpers/basic_counter.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/src/dsp/dsp_data_source_mux.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/src/helpers/valid_data_holder.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/src/helpers/zero_padder.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/src/helpers/resizer.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/src/helpers/complex_splitter.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/src/helpers/subarray_creator.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "preprocessing_bd_wrapper" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Empty (no sources present)

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
set files [list \
 [file normalize "${origin_dir}/sim/remake/remake_defn_pkg.sv"] \
 [file normalize "${origin_dir}/sim/vip/stream_vip/stream_agent.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_vip/stream_seq_item.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_vip/stream_abstract_class.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_vip/stream_driver.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_vip/stream_agent_config.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_vip/stream_monitor.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_vip/stream_sequencer.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_vip/stream_seq.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_vip/stream_agent_pkg.sv"] \
 [file normalize "${origin_dir}/sim/vip/stream_ADDR1_vip/stream_ADDR1_agent.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_ADDR1_vip/stream_ADDR1_seq_item.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_ADDR1_vip/stream_ADDR1_abstract_class.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_ADDR1_vip/stream_ADDR1_driver.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_ADDR1_vip/stream_ADDR1_agent_config.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_ADDR1_vip/stream_ADDR1_monitor.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_ADDR1_vip/stream_ADDR1_sequencer.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_ADDR1_vip/stream_ADDR1_agent_pkg.sv"] \
 [file normalize "${origin_dir}/sim/vip/stream_ADDR2_vip/stream_ADDR2_agent.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_ADDR2_vip/stream_ADDR2_seq_item.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_ADDR2_vip/stream_ADDR2_abstract_class.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_ADDR2_vip/stream_ADDR2_driver.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_ADDR2_vip/stream_ADDR2_agent_config.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_ADDR2_vip/stream_ADDR2_monitor.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_ADDR2_vip/stream_ADDR2_sequencer.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_ADDR2_vip/stream_ADDR2_agent_pkg.sv"] \
 [file normalize "${origin_dir}/sim/vip/stream_slave_vip/stream_slave_agent.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_slave_vip/stream_slave_seq_item.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_slave_vip/stream_slave_abstract_class.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_slave_vip/stream_slave_driver.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_slave_vip/stream_slave_agent_config.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_slave_vip/stream_slave_monitor.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_slave_vip/stream_slave_sequencer.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_slave_vip/stream_slave_seq.svh"] \
 [file normalize "${origin_dir}/sim/vip/stream_slave_vip/stream_slave_agent_pkg.sv"] \
 [file normalize "${origin_dir}/sim/remake/remake_env_pkg.sv"] \
 [file normalize "${origin_dir}/sim/remake/remake_vseq_pkg.sv"] \
 [file normalize "${origin_dir}/sim/remake/remake_test_pkg.sv"] \
 [file normalize "${origin_dir}/sim/vip/stream_ADDR1_vip/stream_ADDR1_if.sv"] \
 [file normalize "${origin_dir}/sim/vip/stream_ADDR2_vip/stream_ADDR2_if.sv"] \
 [file normalize "${origin_dir}/sim/vip/stream_vip/stream_if.sv"] \
 [file normalize "${origin_dir}/sim/vip/stream_slave_vip/stream_slave_if.sv"] \
 [file normalize "${origin_dir}/sim/remake/remake_top.sv"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_vip/stream_agent.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_vip/stream_seq_item.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_vip/stream_abstract_class.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_vip/stream_driver.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_vip/stream_agent_config.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_vip/stream_monitor.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_vip/stream_sequencer.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_vip/stream_seq.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_vip/stream_agent_pkg.sv"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_agent.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_seq_item.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_abstract_class.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_driver.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_agent_config.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_monitor.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_sequencer.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_agent_pkg.sv"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_agent.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_seq_item.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_abstract_class.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_driver.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_agent_config.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_monitor.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_sequencer.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_agent_pkg.sv"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_slave_vip/stream_slave_agent.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_slave_vip/stream_slave_seq_item.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_slave_vip/stream_slave_abstract_class.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_slave_vip/stream_slave_driver.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_slave_vip/stream_slave_agent_config.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_slave_vip/stream_slave_monitor.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_slave_vip/stream_slave_sequencer.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_slave_vip/stream_slave_seq.svh"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_slave_vip/stream_slave_agent_pkg.sv"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_if.sv"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_if.sv"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_vip/stream_if.sv"] \
 [file normalize "${origin_dir}/sim/remake/vip/stream_slave_vip/stream_slave_if.sv"] \
 [file normalize "${origin_dir}/wave/vivado_sim.wcfg"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sim_1' fileset file properties for remote files
set file "$origin_dir/sim/remake/remake_defn_pkg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/sim/vip/stream_vip/stream_agent.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_vip/stream_seq_item.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_vip/stream_abstract_class.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_vip/stream_driver.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_vip/stream_agent_config.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_vip/stream_monitor.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_vip/stream_sequencer.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_vip/stream_seq.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_vip/stream_agent_pkg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/sim/vip/stream_ADDR1_vip/stream_ADDR1_agent.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_ADDR1_vip/stream_ADDR1_seq_item.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_ADDR1_vip/stream_ADDR1_abstract_class.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_ADDR1_vip/stream_ADDR1_driver.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_ADDR1_vip/stream_ADDR1_agent_config.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_ADDR1_vip/stream_ADDR1_monitor.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_ADDR1_vip/stream_ADDR1_sequencer.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_ADDR1_vip/stream_ADDR1_agent_pkg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/sim/vip/stream_ADDR2_vip/stream_ADDR2_agent.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_ADDR2_vip/stream_ADDR2_seq_item.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_ADDR2_vip/stream_ADDR2_abstract_class.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_ADDR2_vip/stream_ADDR2_driver.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_ADDR2_vip/stream_ADDR2_agent_config.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_ADDR2_vip/stream_ADDR2_monitor.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_ADDR2_vip/stream_ADDR2_sequencer.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_ADDR2_vip/stream_ADDR2_agent_pkg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/sim/vip/stream_slave_vip/stream_slave_agent.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_slave_vip/stream_slave_seq_item.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_slave_vip/stream_slave_abstract_class.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_slave_vip/stream_slave_driver.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_slave_vip/stream_slave_agent_config.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_slave_vip/stream_slave_monitor.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_slave_vip/stream_slave_sequencer.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_slave_vip/stream_slave_seq.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/vip/stream_slave_vip/stream_slave_agent_pkg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/sim/remake/remake_env_pkg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/sim/remake/remake_vseq_pkg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/sim/remake/remake_test_pkg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/sim/vip/stream_ADDR1_vip/stream_ADDR1_if.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/sim/vip/stream_ADDR2_vip/stream_ADDR2_if.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/sim/vip/stream_vip/stream_if.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/sim/vip/stream_slave_vip/stream_slave_if.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/sim/remake/remake_top.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_vip/stream_agent.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_vip/stream_seq_item.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_vip/stream_abstract_class.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_vip/stream_driver.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_vip/stream_agent_config.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_vip/stream_monitor.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_vip/stream_sequencer.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_vip/stream_seq.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_vip/stream_agent_pkg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_agent.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_seq_item.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_abstract_class.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_driver.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_agent_config.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_monitor.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_sequencer.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_agent_pkg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_agent.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_seq_item.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_abstract_class.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_driver.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_agent_config.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_monitor.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_sequencer.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_agent_pkg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_slave_vip/stream_slave_agent.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_slave_vip/stream_slave_seq_item.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_slave_vip/stream_slave_abstract_class.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_slave_vip/stream_slave_driver.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_slave_vip/stream_slave_agent_config.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_slave_vip/stream_slave_monitor.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_slave_vip/stream_slave_sequencer.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_slave_vip/stream_slave_seq.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_slave_vip/stream_slave_agent_pkg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_ADDR1_vip/stream_ADDR1_if.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_ADDR2_vip/stream_ADDR2_if.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_vip/stream_if.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/sim/remake/vip/stream_slave_vip/stream_slave_if.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


# Set 'sim_1' fileset file properties for local files
# None

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "top" -value "remake_top" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.compile.xvlog.more_options" -value "-L uvm" -objects $obj
set_property -name "xsim.elaborate.xelab.more_options" -value "-L uvm" -objects $obj
set_property -name "xsim.simulate.xsim.more_options" -value "-testplusarg UVM_TESTNAME=remake_simple_stream_test " -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files dsp_dds_compiler_controller.vhd] == "" } {
  import_files -quiet -fileset sources_1 C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/dsp/dsp_dds_compiler_controller.vhd
}
if { [get_files dsp_dds_compiler_controller.vhd] == "" } {
  import_files -quiet -fileset sources_1 C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/dsp/dsp_dds_compiler_controller.vhd
}
if { [get_files dsp_dds_compiler_controller.vhd] == "" } {
  import_files -quiet -fileset sources_1 C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/dsp/dsp_dds_compiler_controller.vhd
}
if { [get_files axi_slave_register.vhd] == "" } {
  import_files -quiet -fileset sources_1 C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/registers/axi_slave_register.vhd
}
if { [get_files basic_counter.vhd] == "" } {
  import_files -quiet -fileset sources_1 C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/basic_counter.vhd
}
if { [get_files dsp_data_source_mux.vhd] == "" } {
  import_files -quiet -fileset sources_1 C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/dsp/dsp_data_source_mux.vhd
}
if { [get_files valid_data_holder.vhd] == "" } {
  import_files -quiet -fileset sources_1 C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/valid_data_holder.vhd
}
if { [get_files zero_padder.vhd] == "" } {
  import_files -quiet -fileset sources_1 C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/zero_padder.vhd
}
if { [get_files zero_padder.vhd] == "" } {
  import_files -quiet -fileset sources_1 C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/zero_padder.vhd
}


# Proc to create BD preprocessing_bd
proc cr_bd_preprocessing_bd { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# dsp_dds_compiler_controller, dsp_dds_compiler_controller, dsp_dds_compiler_controller, axi_slave_reg, basic_counter, dsp_data_source_mux, valid_data_holder, zero_padder, zero_padder



  # CHANGE DESIGN NAME HERE
  set design_name preprocessing_bd

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:fir_compiler:7.2\
  xilinx.com:ip:cmpy:6.0\
  xilinx.com:ip:dds_compiler:6.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  dsp_dds_compiler_controller\
  dsp_dds_compiler_controller\
  dsp_dds_compiler_controller\
  axi_slave_reg\
  basic_counter\
  dsp_data_source_mux\
  valid_data_holder\
  zero_padder\
  zero_padder\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set S00_AXI_0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S00_AXI_0 ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {16} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {0} \
   CONFIG.HAS_CACHE {0} \
   CONFIG.HAS_LOCK {0} \
   CONFIG.HAS_PROT {1} \
   CONFIG.HAS_QOS {0} \
   CONFIG.HAS_REGION {0} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.MAX_BURST_LENGTH {1} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4LITE} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {0} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $S00_AXI_0


  # Create ports
  set AXI_ARESETN [ create_bd_port -dir I -type rst AXI_ARESETN ]
  set AXI_CLK [ create_bd_port -dir I -type clk AXI_CLK ]
  set adc_clk [ create_bd_port -dir I -type clk -freq_hz 260000000 adc_clk ]
  set adc_rst_ni [ create_bd_port -dir I adc_rst_ni ]
  set adc_tvalid_0 [ create_bd_port -dir I adc_tvalid_0 ]
  set data_in_0 [ create_bd_port -dir I -from 13 -to 0 data_in_0 ]

  # Create instance: Band_filter, and set properties
  set Band_filter [ create_bd_cell -type ip -vlnv xilinx.com:ip:fir_compiler:7.2 Band_filter ]
  set_property -dict [ list \
   CONFIG.Clock_Frequency {260} \
   CONFIG.CoefficientSource {COE_File} \
   CONFIG.Coefficient_File {../../../../../../../filters/bandpass.coe} \
   CONFIG.Coefficient_Fractional_Bits {19} \
   CONFIG.Coefficient_Sets {1} \
   CONFIG.Coefficient_Sign {Signed} \
   CONFIG.Coefficient_Structure {Inferred} \
   CONFIG.Coefficient_Width {16} \
   CONFIG.ColumnConfig {3} \
   CONFIG.Data_Fractional_Bits {0} \
   CONFIG.Data_Width {16} \
   CONFIG.Decimation_Rate {8} \
   CONFIG.Filter_Architecture {Systolic_Multiply_Accumulate} \
   CONFIG.Filter_Type {Decimation} \
   CONFIG.Interpolation_Rate {1} \
   CONFIG.Number_Channels {1} \
   CONFIG.Number_Paths {2} \
   CONFIG.Output_Rounding_Mode {Truncate_LSBs} \
   CONFIG.Output_Width {16} \
   CONFIG.Quantization {Quantize_Only} \
   CONFIG.RateSpecification {Frequency_Specification} \
   CONFIG.Sample_Frequency {65} \
   CONFIG.Zero_Pack_Factor {1} \
 ] $Band_filter

  # Create instance: Band_mixer, and set properties
  set Band_mixer [ create_bd_cell -type ip -vlnv xilinx.com:ip:cmpy:6.0 Band_mixer ]
  set_property -dict [ list \
   CONFIG.ARESETN {true} \
   CONFIG.BPortWidth {16} \
   CONFIG.OutputWidth {16} \
   CONFIG.RoundMode {Truncate} \
 ] $Band_mixer

  # Create instance: Band_selector_oscillator, and set properties
  set Band_selector_oscillator [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 Band_selector_oscillator ]
  set_property -dict [ list \
   CONFIG.Amplitude_Mode {Full_Range} \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.DDS_Clock_Rate {260} \
   CONFIG.Frequency_Resolution {0.4} \
   CONFIG.Has_Phase_Out {false} \
   CONFIG.Has_TREADY {true} \
   CONFIG.Latency {9} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Noise_Shaping {None} \
   CONFIG.Output_Frequency1 {0} \
   CONFIG.Output_Width {16} \
   CONFIG.PINC1 {100100011011101} \
   CONFIG.Parameter_Entry {Hardware_Parameters} \
   CONFIG.Phase_Increment {Fixed} \
   CONFIG.Phase_Width {16} \
   CONFIG.S_PHASE_Has_TUSER {Not_Required} \
 ] $Band_selector_oscillator

  # Create instance: Band_selector_oscillator_controller, and set properties
  set block_name dsp_dds_compiler_controller
  set block_cell_name Band_selector_oscillator_controller
  if { [catch {set Band_selector_oscillator_controller [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Band_selector_oscillator_controller eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {32} \
 ] $Band_selector_oscillator_controller

  # Create instance: Channel_filter, and set properties
  set Channel_filter [ create_bd_cell -type ip -vlnv xilinx.com:ip:fir_compiler:7.2 Channel_filter ]
  set_property -dict [ list \
   CONFIG.Clock_Frequency {260} \
   CONFIG.CoefficientSource {COE_File} \
   CONFIG.Coefficient_File {../../../../../../../filters/lowpass.coe} \
   CONFIG.Coefficient_Fractional_Bits {20} \
   CONFIG.Coefficient_Reload {false} \
   CONFIG.Coefficient_Sets {1} \
   CONFIG.Coefficient_Sign {Signed} \
   CONFIG.Coefficient_Structure {Inferred} \
   CONFIG.Coefficient_Width {16} \
   CONFIG.ColumnConfig {1} \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.Data_Fractional_Bits {0} \
   CONFIG.Data_Width {16} \
   CONFIG.Decimation_Rate {50} \
   CONFIG.Filter_Architecture {Systolic_Multiply_Accumulate} \
   CONFIG.Filter_Type {Decimation} \
   CONFIG.Interpolation_Rate {1} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Number_Channels {1} \
   CONFIG.Number_Paths {2} \
   CONFIG.Output_Rounding_Mode {Truncate_LSBs} \
   CONFIG.Output_Width {16} \
   CONFIG.Quantization {Quantize_Only} \
   CONFIG.RateSpecification {Frequency_Specification} \
   CONFIG.S_DATA_Has_FIFO {true} \
   CONFIG.S_DATA_Has_TUSER {Not_Required} \
   CONFIG.Sample_Frequency {8.125} \
   CONFIG.Select_Pattern {All} \
   CONFIG.Zero_Pack_Factor {1} \
 ] $Channel_filter

  # Create instance: Channel_mixer, and set properties
  set Channel_mixer [ create_bd_cell -type ip -vlnv xilinx.com:ip:cmpy:6.0 Channel_mixer ]
  set_property -dict [ list \
   CONFIG.ARESETN {true} \
   CONFIG.BPortWidth {16} \
   CONFIG.MinimumLatency {6} \
   CONFIG.OutputWidth {16} \
   CONFIG.RoundMode {Truncate} \
 ] $Channel_mixer

  # Create instance: Channel_selector_oscillator, and set properties
  set Channel_selector_oscillator [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 Channel_selector_oscillator ]
  set_property -dict [ list \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.DDS_Clock_Rate {260} \
   CONFIG.Frequency_Resolution {0.4} \
   CONFIG.Has_Phase_Out {false} \
   CONFIG.Has_TREADY {true} \
   CONFIG.Latency {9} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Noise_Shaping {None} \
   CONFIG.Output_Frequency1 {0} \
   CONFIG.Output_Width {16} \
   CONFIG.PINC1 {1111110000} \
   CONFIG.Parameter_Entry {Hardware_Parameters} \
   CONFIG.Phase_Increment {Fixed} \
   CONFIG.Phase_Width {16} \
   CONFIG.S_PHASE_Has_TUSER {Not_Required} \
 ] $Channel_selector_oscillator

  # Create instance: Channel_selector_oscillator_controller, and set properties
  set block_name dsp_dds_compiler_controller
  set block_cell_name Channel_selector_oscillator_controller
  if { [catch {set Channel_selector_oscillator_controller [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Channel_selector_oscillator_controller eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.DIVIDE_CLK_FREQ_BY {32} \
 ] $Channel_selector_oscillator_controller

  # Create instance: Local_oscillator, and set properties
  set Local_oscillator [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 Local_oscillator ]
  set_property -dict [ list \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.DDS_Clock_Rate {260} \
   CONFIG.Frequency_Resolution {0.4} \
   CONFIG.Has_Phase_Out {false} \
   CONFIG.Has_TREADY {true} \
   CONFIG.Latency {9} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Noise_Shaping {None} \
   CONFIG.Output_Frequency1 {0} \
   CONFIG.Output_Selection {Cosine} \
   CONFIG.Output_Width {16} \
   CONFIG.PINC1 {100101011010101} \
   CONFIG.Parameter_Entry {Hardware_Parameters} \
   CONFIG.Phase_Increment {Fixed} \
   CONFIG.Phase_Width {16} \
   CONFIG.S_PHASE_Has_TUSER {Not_Required} \
 ] $Local_oscillator

  # Create instance: Oscillator_controller, and set properties
  set block_name dsp_dds_compiler_controller
  set block_cell_name Oscillator_controller
  if { [catch {set Oscillator_controller [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Oscillator_controller eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {16} \
 ] $Oscillator_controller

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {1} \
   CONFIG.S00_HAS_REGSLICE {0} \
 ] $axi_interconnect_0

  # Create instance: axi_slave_reg_0, and set properties
  set block_name axi_slave_reg
  set block_cell_name axi_slave_reg_0
  if { [catch {set axi_slave_reg_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axi_slave_reg_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: basic_counter_0, and set properties
  set block_name basic_counter
  set block_cell_name basic_counter_0
  if { [catch {set basic_counter_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $basic_counter_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIVIDE_CLK_FREQ_BY {4} \
 ] $basic_counter_0

  # Create instance: dsp_data_source_mux_0, and set properties
  set block_name dsp_data_source_mux
  set block_cell_name dsp_data_source_mux_0
  if { [catch {set dsp_data_source_mux_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $dsp_data_source_mux_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: valid_data_holder_0, and set properties
  set block_name valid_data_holder
  set block_cell_name valid_data_holder_0
  if { [catch {set valid_data_holder_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $valid_data_holder_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_LENGTH {16} \
 ] $valid_data_holder_0

  # Create instance: zero_padder_0, and set properties
  set block_name zero_padder
  set block_cell_name zero_padder_0
  if { [catch {set zero_padder_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $zero_padder_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.LSB_PADDING {false} \
 ] $zero_padder_0

  # Create instance: zero_padder_1, and set properties
  set block_name zero_padder
  set block_cell_name zero_padder_1
  if { [catch {set zero_padder_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $zero_padder_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.INPUT_WIDTH {14} \
   CONFIG.OUTPUT_WIDTH {16} \
 ] $zero_padder_1

  # Create interface connections
  connect_bd_intf_net -intf_net Channel_mixer_M_AXIS_DOUT [get_bd_intf_pins Channel_filter/S_AXIS_DATA] [get_bd_intf_pins Channel_mixer/M_AXIS_DOUT]
  connect_bd_intf_net -intf_net Oscilador_local_M_AXIS_DATA [get_bd_intf_pins Band_selector_oscillator/M_AXIS_DATA] [get_bd_intf_pins Band_selector_oscillator_controller/s_axis]
  connect_bd_intf_net -intf_net Oscilador_local_M_AXIS_DATA_1 [get_bd_intf_pins Channel_selector_oscillator/M_AXIS_DATA] [get_bd_intf_pins Channel_selector_oscillator_controller/s_axis]
  connect_bd_intf_net -intf_net Oscilador_local_M_AXIS_DATA_2 [get_bd_intf_pins Local_oscillator/M_AXIS_DATA] [get_bd_intf_pins Oscillator_controller/s_axis]
  connect_bd_intf_net -intf_net S00_AXI_0_1 [get_bd_intf_ports S00_AXI_0] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins axi_slave_reg_0/S_AXI]
  connect_bd_intf_net -intf_net basic_counter_0_m_axis [get_bd_intf_pins basic_counter_0/m_axis] [get_bd_intf_pins dsp_data_source_mux_0/counter]

  # Create port connections
  connect_bd_net -net ACLK_0_2 [get_bd_ports AXI_CLK] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins axi_slave_reg_0/S_AXI_ACLK]
  connect_bd_net -net ARESETN_0_1 [get_bd_ports AXI_ARESETN] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins axi_slave_reg_0/S_AXI_ARESETN]
  connect_bd_net -net Band_filter_m_axis_data_tdata [get_bd_pins Band_filter/m_axis_data_tdata] [get_bd_pins Channel_mixer/s_axis_a_tdata]
  connect_bd_net -net Band_filter_m_axis_data_tvalid [get_bd_pins Band_filter/m_axis_data_tvalid] [get_bd_pins Channel_mixer/s_axis_a_tvalid] [get_bd_pins Channel_mixer/s_axis_b_tvalid]
  connect_bd_net -net Band_mixer_m_axis_dout_tdata [get_bd_pins Band_filter/s_axis_data_tdata] [get_bd_pins Band_mixer/m_axis_dout_tdata]
  connect_bd_net -net Band_mixer_m_axis_dout_tvalid [get_bd_pins Band_filter/s_axis_data_tvalid] [get_bd_pins Band_mixer/m_axis_dout_tvalid]
  connect_bd_net -net Band_selector_oscillator_controller_m_axis_tdata [get_bd_pins Band_mixer/s_axis_a_tdata] [get_bd_pins Band_selector_oscillator_controller/m_axis_tdata]
  connect_bd_net -net Channel_selector_oscillator_controller_m_axis_tdata [get_bd_pins Channel_mixer/s_axis_b_tdata] [get_bd_pins Channel_selector_oscillator_controller/m_axis_tdata]
  connect_bd_net -net Oscillator_controller_m_axis_tdata [get_bd_pins Oscillator_controller/m_axis_tdata] [get_bd_pins dsp_data_source_mux_0/dds_compiler_tdata]
  connect_bd_net -net aclk_0_1 [get_bd_ports adc_clk] [get_bd_pins Band_filter/aclk] [get_bd_pins Band_mixer/aclk] [get_bd_pins Band_selector_oscillator/aclk] [get_bd_pins Band_selector_oscillator_controller/aclk] [get_bd_pins Channel_filter/aclk] [get_bd_pins Channel_mixer/aclk] [get_bd_pins Channel_selector_oscillator/aclk] [get_bd_pins Channel_selector_oscillator_controller/aclk] [get_bd_pins Local_oscillator/aclk] [get_bd_pins Oscillator_controller/aclk] [get_bd_pins basic_counter_0/clk_i] [get_bd_pins valid_data_holder_0/clk_i]
  connect_bd_net -net adc_tvalid_0_1 [get_bd_ports adc_tvalid_0] [get_bd_pins valid_data_holder_0/s_axis_tvalid]
  connect_bd_net -net axi_slave_reg_0_data_source_selector [get_bd_pins axi_slave_reg_0/data_source_selector] [get_bd_pins dsp_data_source_mux_0/control_in]
  connect_bd_net -net data_in_0_1 [get_bd_ports data_in_0] [get_bd_pins zero_padder_1/data_in]
  connect_bd_net -net dsp_data_source_mux_0_m_axis_tdata [get_bd_pins dsp_data_source_mux_0/m_axis_tdata] [get_bd_pins zero_padder_0/data_in]
  connect_bd_net -net dsp_data_source_mux_0_m_axis_tvalid [get_bd_pins Band_mixer/s_axis_a_tvalid] [get_bd_pins Band_mixer/s_axis_b_tvalid] [get_bd_pins dsp_data_source_mux_0/m_axis_tvalid]
  connect_bd_net -net rst_ni_0_1 [get_bd_ports adc_rst_ni] [get_bd_pins Band_mixer/aresetn] [get_bd_pins Band_selector_oscillator_controller/rst_ni] [get_bd_pins Channel_mixer/aresetn] [get_bd_pins Channel_selector_oscillator_controller/rst_ni] [get_bd_pins Oscillator_controller/rst_ni] [get_bd_pins basic_counter_0/rst_ni] [get_bd_pins valid_data_holder_0/rst_ni]
  connect_bd_net -net valid_data_holder_0_m_axis_tdata [get_bd_pins dsp_data_source_mux_0/adc_tdata] [get_bd_pins valid_data_holder_0/m_axis_tdata]
  connect_bd_net -net valid_data_holder_0_m_axis_tvalid [get_bd_pins dsp_data_source_mux_0/adc_tvalid] [get_bd_pins dsp_data_source_mux_0/dds_compiler_tvalid] [get_bd_pins valid_data_holder_0/m_axis_tvalid]
  connect_bd_net -net zero_padder_0_data_out [get_bd_pins Band_mixer/s_axis_b_tdata] [get_bd_pins zero_padder_0/data_out]
  connect_bd_net -net zero_padder_1_data_out [get_bd_pins valid_data_holder_0/s_axis_tdata] [get_bd_pins zero_padder_1/data_out]

  # Create address segments
  assign_bd_address -offset 0x00000000 -range 0x00001000 -target_address_space [get_bd_addr_spaces S00_AXI_0] [get_bd_addr_segs axi_slave_reg_0/S_AXI/reg0] -force

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.93816",
   "Default View_TopLeft":"346,468",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0r6  2020-01-29 bk=1.5227 VDI=41 GEI=36 GUI=JA:10.0 non-TLS
#  -string -flagsOSRD
preplace port S00_AXI_0 -pg 1 -lvl 0 -x 0 -y 60 -defaultsOSRD
preplace port AXI_ARESETN -pg 1 -lvl 0 -x 0 -y 120 -defaultsOSRD
preplace port AXI_CLK -pg 1 -lvl 0 -x 0 -y 90 -defaultsOSRD
preplace port adc_clk -pg 1 -lvl 0 -x 0 -y 550 -defaultsOSRD
preplace port adc_rst_ni -pg 1 -lvl 0 -x 0 -y 670 -defaultsOSRD
preplace port adc_tvalid_0 -pg 1 -lvl 0 -x 0 -y 370 -defaultsOSRD
preplace portBus data_in_0 -pg 1 -lvl 0 -x 0 -y 310 -defaultsOSRD
preplace inst Band_filter -pg 1 -lvl 6 -x 2030 -y 570 -defaultsOSRD
preplace inst Band_mixer -pg 1 -lvl 5 -x 1650 -y 560 -defaultsOSRD
preplace inst Band_selector_oscillator -pg 1 -lvl 3 -x 920 -y 690 -defaultsOSRD
preplace inst Band_selector_oscillator_controller -pg 1 -lvl 4 -x 1280 -y 710 -defaultsOSRD
preplace inst Channel_filter -pg 1 -lvl 8 -x 2700 -y 630 -defaultsOSRD
preplace inst Channel_mixer -pg 1 -lvl 7 -x 2400 -y 620 -defaultsOSRD
preplace inst Channel_selector_oscillator -pg 1 -lvl 5 -x 1650 -y 750 -defaultsOSRD
preplace inst Channel_selector_oscillator_controller -pg 1 -lvl 6 -x 2030 -y 770 -defaultsOSRD
preplace inst Local_oscillator -pg 1 -lvl 1 -x 170 -y 610 -defaultsOSRD
preplace inst Oscillator_controller -pg 1 -lvl 2 -x 510 -y 630 -defaultsOSRD
preplace inst axi_interconnect_0 -pg 1 -lvl 1 -x 170 -y 120 -defaultsOSRD
preplace inst axi_slave_reg_0 -pg 1 -lvl 2 -x 510 -y 140 -defaultsOSRD
preplace inst basic_counter_0 -pg 1 -lvl 2 -x 510 -y 480 -defaultsOSRD
preplace inst dsp_data_source_mux_0 -pg 1 -lvl 3 -x 920 -y 490 -defaultsOSRD
preplace inst valid_data_holder_0 -pg 1 -lvl 2 -x 510 -y 330 -defaultsOSRD
preplace inst zero_padder_0 -pg 1 -lvl 4 -x 1280 -y 570 -defaultsOSRD
preplace inst zero_padder_1 -pg 1 -lvl 1 -x 170 -y 310 -defaultsOSRD
preplace netloc ACLK_0_2 1 0 2 30 240 310J
preplace netloc ARESETN_0_1 1 0 2 20 250 320J
preplace netloc Band_filter_m_axis_data_tdata 1 6 1 N 570
preplace netloc Band_filter_m_axis_data_tvalid 1 6 1 2240 590n
preplace netloc Band_mixer_m_axis_dout_tdata 1 5 1 N 560
preplace netloc Band_mixer_m_axis_dout_tvalid 1 5 1 N 580
preplace netloc Band_selector_oscillator_controller_m_axis_tdata 1 4 1 1440 510n
preplace netloc Channel_selector_oscillator_controller_m_axis_tdata 1 6 1 2220 630n
preplace netloc Oscillator_controller_m_axis_tdata 1 2 1 700 520n
preplace netloc aclk_0_1 1 0 8 30 550 320 550 690 750 1120 630 1450 690 1840 690 2230 750 2560
preplace netloc adc_tvalid_0_1 1 0 2 NJ 370 310J
preplace netloc axi_slave_reg_0_data_source_selector 1 2 1 710 140n
preplace netloc data_in_0_1 1 0 1 NJ 310
preplace netloc dsp_data_source_mux_0_m_axis_tdata 1 3 1 1120 490n
preplace netloc dsp_data_source_mux_0_m_axis_tvalid 1 3 2 N 510 1430
preplace netloc rst_ni_0_1 1 0 7 NJ 670 330 760 NJ 760 1130 790 1460 810 1840 850 2240
preplace netloc valid_data_holder_0_m_axis_tdata 1 2 1 720 330n
preplace netloc valid_data_holder_0_m_axis_tvalid 1 2 1 690 350n
preplace netloc zero_padder_0_data_out 1 4 1 NJ 570
preplace netloc zero_padder_1_data_out 1 1 1 NJ 310
preplace netloc Channel_mixer_M_AXIS_DOUT 1 7 1 N 620
preplace netloc Oscilador_local_M_AXIS_DATA 1 3 1 NJ 690
preplace netloc Oscilador_local_M_AXIS_DATA_1 1 5 1 NJ 750
preplace netloc Oscilador_local_M_AXIS_DATA_2 1 1 1 NJ 610
preplace netloc S00_AXI_0_1 1 0 1 NJ 60
preplace netloc axi_interconnect_0_M00_AXI 1 1 1 N 120
preplace netloc basic_counter_0_m_axis 1 2 1 N 480
levelinfo -pg 1 0 170 510 920 1280 1650 2030 2400 2700 2850
pagesize -pg 1 -db -bbox -sgen -150 0 2850 860
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_preprocessing_bd()
cr_bd_preprocessing_bd ""
set_property REGISTERED_WITH_MANAGER "1" [get_files preprocessing_bd.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files preprocessing_bd.bd ] 

#call make_wrapper to create wrapper files
if { [get_property IS_LOCKED [ get_files -norecurse preprocessing_bd.bd] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/vivado/vivado.gen/sources_1/bd/preprocessing_bd/hdl/preprocessing_bd_wrapper.vhd" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse preprocessing_bd.bd] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}


# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7z030fbg676-2 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "auto_incremental_checkpoint.directory" -value "C:/home/fran/C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/vivado/vivado.srcs/utils_1/imports/synth_1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7z030fbg676-2 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "auto_incremental_checkpoint.directory" -value "C:/home/fran/C:/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/vivado/vivado.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
